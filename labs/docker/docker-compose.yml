version: '3.8'

services:
  # Damn Vulnerable Web Application
  dvwa:
    image: vulnerables/web-dvwa:latest
    container_name: kawaiisec-dvwa-compose
    ports:
      - "8080:80"
    environment:
      - MYSQL_DATABASE=dvwa
      - MYSQL_USER=dvwa
      - MYSQL_PASSWORD=dvwa
      - MYSQL_ROOT_PASSWORD=dvwa
    volumes:
      - dvwa_data:/var/lib/mysql
    networks:
      - kawaiisec-lab
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # OWASP Juice Shop
  juice-shop:
    image: bkimminich/juice-shop:latest
    container_name: kawaiisec-juice-shop-compose
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=unsafe
    networks:
      - kawaiisec-lab
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Vulnerable PostgreSQL Database
  postgres-vuln:
    image: postgres:13
    container_name: kawaiisec-postgres-vuln
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=vulndb
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password123
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts/postgres-init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - kawaiisec-lab
    restart: unless-stopped
    command: >
      postgres 
      -c log_statement=all 
      -c log_destination=stderr 
      -c logging_collector=on
      -c log_directory=/var/log/postgresql
      -c log_filename=postgresql.log

  # Vulnerable MySQL Database
  mysql-vuln:
    image: mysql:5.7
    container_name: kawaiisec-mysql-vuln
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=testdb
      - MYSQL_USER=testuser
      - MYSQL_PASSWORD=password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-scripts/mysql-init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - kawaiisec-lab
    restart: unless-stopped
    command: >
      --general-log=1
      --general-log-file=/var/lib/mysql/general.log
      --slow-query-log=1
      --slow-query-log-file=/var/lib/mysql/slow.log
      --long_query_time=0
      --log-queries-not-using-indexes

  # Vulnerable FTP Server
  ftp-vuln:
    image: stilliard/pure-ftpd:latest
    container_name: kawaiisec-ftp-vuln
    ports:
      - "21:21"
      - "30000-30009:30000-30009"
    environment:
      - PUBLICHOST=localhost
      - FTP_USER_NAME=ftpuser
      - FTP_USER_PASS=ftppass
      - FTP_USER_HOME=/home/ftpuser
    volumes:
      - ftp_data:/home/ftpuser
      - ftp_data:/etc/pure-ftpd/passwd
    networks:
      - kawaiisec-lab
    restart: unless-stopped

  # Vulnerable SSH Server (with weak credentials)
  ssh-vuln:
    image: ubuntu:20.04
    container_name: kawaiisec-ssh-vuln
    ports:
      - "2222:22"
    environment:
      - ROOT_PASSWORD=toor
    volumes:
      - ./init-scripts/ssh-setup.sh:/setup.sh
    networks:
      - kawaiisec-lab
    restart: unless-stopped
    command: >
      bash -c "
      apt-get update && 
      apt-get install -y openssh-server sudo && 
      echo 'root:toor' | chpasswd && 
      echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config && 
      echo 'PasswordAuthentication yes' >> /etc/ssh/sshd_config && 
      useradd -m -p '\$6\$salt\$3WFfpSdj6Z7DKYc/PtZk7Gzr2/HZqWzHqr0zN0Hk/kNQ9KqGLRtHtJ1GrDGH9V8Xr6KZKGj3HdM4aQg9GH5vQ/' admin &&
      useradd -m -p '\$6\$salt\$2FdZHPFOWJdj1VYe/1zL7nMa4/JRqWxFqs7zY8No/lYQ8LqgMHkFsJ6HaEgG8Y9Za5LYJoKg2HfM3aPH8oG4uG/' user &&
      service ssh start && 
      tail -f /dev/null
      "

  # Vulnerable Web Server (Apache with PHP)
  apache-vuln:
    image: php:7.4-apache
    container_name: kawaiisec-apache-vuln
    ports:
      - "8081:80"
    volumes:
      - ./vulnerable-apps:/var/www/html
    networks:
      - kawaiisec-lab
    restart: unless-stopped
    environment:
      - APACHE_RUN_USER=www-data
      - APACHE_RUN_GROUP=www-data

  # Elasticsearch (for log aggregation and SIEM practice)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: kawaiisec-elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - cluster.name=kawaiisec-cluster
      - node.name=kawaiisec-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - kawaiisec-lab
    restart: unless-stopped

  # Kibana (for log visualization)
  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.0
    container_name: kawaiisec-kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_NAME=kawaiisec-kibana
    depends_on:
      - elasticsearch
    networks:
      - kawaiisec-lab
    restart: unless-stopped

  # Logstash (for log processing)
  logstash:
    image: docker.elastic.co/logstash/logstash:7.14.0
    container_name: kawaiisec-logstash
    ports:
      - "5044:5044"
      - "9600:9600"
    volumes:
      - ./logstash-config:/usr/share/logstash/pipeline
    environment:
      - "LS_JAVA_OPTS=-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch
    networks:
      - kawaiisec-lab
    restart: unless-stopped

  # Metasploitable2 (lightweight alternative)
  metasploitable:
    image: tleemcjr/metasploitable2
    container_name: kawaiisec-metasploitable2
    ports:
      - "2223:22"    # SSH
      - "2380:80"    # HTTP
      - "2443:443"   # HTTPS
      - "2321:21"    # FTP
      - "2325:25"    # SMTP
      - "2353:53"    # DNS
      - "2389:389"   # LDAP
    networks:
      - kawaiisec-lab
    restart: unless-stopped
    privileged: true

networks:
  kawaiisec-lab:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  dvwa_data:
    driver: local
  postgres_data:
    driver: local
  mysql_data:
    driver: local
  ftp_data:
    driver: local
  elasticsearch_data:
    driver: local 