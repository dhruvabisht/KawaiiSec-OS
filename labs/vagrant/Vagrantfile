# -*- mode: ruby -*-
# vi: set ft=ruby :

# KawaiiSec OS - Metasploitable3 + Kali Control Lab Environment
# This Vagrantfile creates a comprehensive penetration testing lab

Vagrant.configure("2") do |config|
  # Global VM settings
  config.vm.box_check_update = false
  config.vm.synced_folder ".", "/vagrant", disabled: false
  
  # Create shared folders
  config.vm.synced_folder "../../scripts", "/kawaiisec/scripts", create: true
  config.vm.synced_folder "../../docs", "/kawaiisec/docs", create: true
  
  # =============================================================================
  # KALI LINUX CONTROL MACHINE
  # =============================================================================
  config.vm.define "kali-control", primary: true do |kali|
    kali.vm.box = "kalilinux/rolling"
    kali.vm.hostname = "kali-control"
    
    # Network configuration
    kali.vm.network "private_network", ip: "192.168.57.100", adapter: 2
    kali.vm.network "private_network", ip: "192.168.56.100", adapter: 3
    
    # Port forwarding for web services
    kali.vm.network "forwarded_port", guest: 80, host: 8080
    kali.vm.network "forwarded_port", guest: 443, host: 8443
    kali.vm.network "forwarded_port", guest: 4444, host: 4444  # Metasploit handler
    kali.vm.network "forwarded_port", guest: 8080, host: 8090  # Internal web server
    
    # VM specifications
    kali.vm.provider "virtualbox" do |vb|
      vb.name = "KawaiiSec-Kali-Control"
      vb.memory = "4096"
      vb.cpus = 2
      vb.gui = true
      
      # Enable virtualization features
      vb.customize ["modifyvm", :id, "--nested-hw-virt", "on"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["modifyvm", :id, "--draganddrop", "bidirectional"]
      
      # Network adapter settings
      vb.customize ["modifyvm", :id, "--nictype1", "82540EM"]
      vb.customize ["modifyvm", :id, "--nictype2", "82540EM"]
      vb.customize ["modifyvm", :id, "--nictype3", "82540EM"]
    end
    
    # Provisioning script
    kali.vm.provision "shell", inline: <<-SHELL
      echo "🌸 Setting up KawaiiSec Kali Control Machine..."
      
      # Update system
      apt-get update
      
      # Install additional tools not in default Kali
      apt-get install -y \
        docker.io \
        docker-compose \
        python3-impacket \
        seclists \
        enum4linux \
        smbclient \
        smbmap \
        nbtscan \
        onesixtyone \
        snmp-mibs-downloader \
        rlwrap \
        tmux \
        tree \
        jq \
        curl \
        wget \
        git \
        vim \
        htop \
        net-tools
      
      # Enable and start services
      systemctl enable ssh
      systemctl start ssh
      systemctl enable docker
      systemctl start docker
      
      # Add user to docker group
      usermod -aG docker vagrant
      
      # Initialize Metasploit database
      msfdb init
      
      # Create workspace directories
      mkdir -p /home/vagrant/{tools,wordlists,exploits,payloads,reports,screenshots}
      chown -R vagrant:vagrant /home/vagrant/
      
      # Download additional wordlists
      cd /home/vagrant/wordlists
      wget -q https://github.com/danielmiessler/SecLists/archive/master.zip -O seclists.zip
      unzip -q seclists.zip && rm seclists.zip
      chown -R vagrant:vagrant /home/vagrant/wordlists/
      
      # Create useful aliases
      cat >> /home/vagrant/.bashrc << 'EOF'
# KawaiiSec Aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias ..='cd ..'
alias ...='cd ../..'
alias grep='grep --color=auto'
alias msfconsole='msfconsole -q'
alias nse='ls /usr/share/nmap/scripts/ | grep'
alias searchsploit='searchsploit --color'
alias kawaii-help='cat /kawaiisec/docs/quick-start.md'

# Network scanning shortcuts
alias discover='nmap -sn'
alias quickscan='nmap -T4 -F'
alias fullscan='nmap -T4 -A -v'
alias vulnscan='nmap --script vuln'

# Metasploit shortcuts
alias msf='msfconsole -q'
alias msfupdate='msfupdate'

# Docker shortcuts
alias dc='docker-compose'
alias dps='docker ps'
alias di='docker images'

# Web shortcuts
alias serve='python3 -m http.server 8080'
alias webshell='nc -lvnp 4444'
EOF
      
      # Set up target host entries
      cat >> /etc/hosts << 'EOF'
# KawaiiSec Lab Targets
192.168.57.10  ms3-windows metasploitable3-win2k8
192.168.57.11  ms3-linux metasploitable3-ub1404
192.168.56.10  ms3-windows-alt
192.168.56.11  ms3-linux-alt
EOF
      
      # Create reconnaissance script
      cat > /home/vagrant/recon.sh << 'RECON_EOF'
#!/bin/bash
echo "🔍 KawaiiSec Reconnaissance Script"
echo "================================="

# Network discovery
echo "[+] Discovering live hosts..."
nmap -sn 192.168.57.0/24 192.168.56.0/24

# Quick port scan of targets
echo "[+] Quick port scan of Metasploitable3 targets..."
nmap -T4 -F 192.168.57.10 192.168.57.11

# Service enumeration
echo "[+] Service enumeration..."
nmap -sV -sC 192.168.57.10 192.168.57.11

echo "[+] Reconnaissance complete! Check output above."
RECON_EOF
      chmod +x /home/vagrant/recon.sh
      chown vagrant:vagrant /home/vagrant/recon.sh
      
      # Create exploit development environment
      cat > /home/vagrant/msfsetup.rc << 'MSF_EOF'
# Metasploit resource script for KawaiiSec
# Load this with: msfconsole -r msfsetup.rc

echo "[+] Setting up KawaiiSec Metasploit environment..."

# Create workspace
workspace -a kawaiisec

# Set global variables
setg RHOSTS 192.168.57.10-11
setg LHOST 192.168.57.100
setg LPORT 4444

# Load common modules
echo "[+] Loading common exploit modules..."
use auxiliary/scanner/smb/smb_version
use auxiliary/scanner/ssh/ssh_version
use auxiliary/scanner/http/http_version

echo "[+] KawaiiSec Metasploit environment ready!"
echo "Targets: 192.168.57.10 (Windows), 192.168.57.11 (Linux)"
echo "Attacker: 192.168.57.100 (This machine)"
MSF_EOF
      chown vagrant:vagrant /home/vagrant/msfsetup.rc
      
      # Install custom tools
      echo "[+] Installing additional penetration testing tools..."
      
      # Install impacket examples
      cd /opt
      git clone https://github.com/SecureAuthCorp/impacket.git
      cd impacket
      python3 -m pip install .
      
      # Install AutoRecon
      python3 -m pip install autorecon
      
      # Install bloodhound
      apt-get install -y bloodhound neo4j
      
      # Setup complete message
      echo "🌸 KawaiiSec Kali Control Machine setup complete!"
      echo "💡 Quick start commands:"
      echo "   - Run reconnaissance: ./recon.sh"
      echo "   - Start Metasploit: msfconsole -r msfsetup.rc"
      echo "   - Access help: kawaii-help"
      echo "   - Scan targets: nmap -sV 192.168.57.10-11"
      
    SHELL
  end
  
  # =============================================================================
  # METASPLOITABLE3 WINDOWS TARGET
  # =============================================================================
  config.vm.define "ms3-windows" do |windows|
    windows.vm.box = "rapid7/metasploitable3-win2k8"
    windows.vm.hostname = "metasploitable3-win2k8"
    windows.vm.communicator = "winrm"
    
    # WinRM configuration
    windows.winrm.basic_auth_only = true
    windows.winrm.timeout = 300
    windows.winrm.retry_limit = 20
    
    # Network configuration
    windows.vm.network "private_network", ip: "192.168.57.10", adapter: 2
    windows.vm.network "private_network", ip: "192.168.56.10", adapter: 3
    
    # VM specifications
    windows.vm.provider "virtualbox" do |vb|
      vb.name = "KawaiiSec-Metasploitable3-Windows"
      vb.memory = "2048"
      vb.cpus = 2
      vb.gui = false
      
      # Windows-specific settings
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["modifyvm", :id, "--draganddrop", "bidirectional"]
    end
    
    # Windows provisioning
    windows.vm.provision "shell", inline: <<-SHELL
      echo "Setting up Metasploitable3 Windows target..."
      # Additional Windows-specific setup can go here
    SHELL
  end
  
  # =============================================================================
  # METASPLOITABLE3 LINUX TARGET
  # =============================================================================
  config.vm.define "ms3-linux" do |linux|
    linux.vm.box = "rapid7/metasploitable3-ub1404"
    linux.vm.hostname = "metasploitable3-ub1404"
    
    # Network configuration
    linux.vm.network "private_network", ip: "192.168.57.11", adapter: 2
    linux.vm.network "private_network", ip: "192.168.56.11", adapter: 3
    
    # VM specifications
    linux.vm.provider "virtualbox" do |vb|
      vb.name = "KawaiiSec-Metasploitable3-Linux"
      vb.memory = "1024"
      vb.cpus = 1
      vb.gui = false
    end
    
    # Linux provisioning
    linux.vm.provision "shell", inline: <<-SHELL
      echo "Setting up Metasploitable3 Linux target..."
      
      # Ensure SSH is enabled and configured
      systemctl enable ssh
      systemctl start ssh
      
      # Add some additional vulnerable services for practice
      apt-get update
      
      # Install and configure vulnerable FTP
      apt-get install -y vsftpd
      echo "anonymous_enable=YES" >> /etc/vsftpd.conf
      echo "write_enable=YES" >> /etc/vsftpd.conf
      echo "anon_upload_enable=YES" >> /etc/vsftpd.conf
      service vsftpd restart
      
      # Install telnet for additional attack surface
      apt-get install -y telnetd xinetd
      service xinetd restart
      
      echo "Metasploitable3 Linux setup complete!"
    SHELL
  end
  
  # =============================================================================
  # ADDITIONAL VULNERABLE TARGET (DVWA CONTAINER HOST)
  # =============================================================================
  config.vm.define "dvwa-host", autostart: false do |dvwa|
    dvwa.vm.box = "ubuntu/focal64"
    dvwa.vm.hostname = "dvwa-host"
    
    # Network configuration
    dvwa.vm.network "private_network", ip: "192.168.57.20", adapter: 2
    dvwa.vm.network "forwarded_port", guest: 80, host: 8081
    
    # VM specifications
    dvwa.vm.provider "virtualbox" do |vb|
      vb.name = "KawaiiSec-DVWA-Host"
      vb.memory = "1024"
      vb.cpus = 1
      vb.gui = false
    end
    
    # Provisioning for DVWA host
    dvwa.vm.provision "shell", inline: <<-SHELL
      echo "Setting up DVWA Docker host..."
      
      # Install Docker
      apt-get update
      apt-get install -y docker.io docker-compose
      systemctl enable docker
      systemctl start docker
      
      # Add vagrant user to docker group
      usermod -aG docker vagrant
      
      # Copy docker-compose file
      mkdir -p /opt/kawaiisec
      cd /opt/kawaiisec
      
      # Create simplified docker-compose for lab
      cat > docker-compose.yml << 'DOCKER_EOF'
version: '3.8'
services:
  dvwa:
    image: vulnerables/web-dvwa:latest
    ports:
      - "80:80"
    environment:
      - MYSQL_DATABASE=dvwa
      - MYSQL_USER=dvwa
      - MYSQL_PASSWORD=dvwa
      - MYSQL_ROOT_PASSWORD=dvwa
    restart: unless-stopped
DOCKER_EOF
      
      # Start DVWA
      docker-compose up -d
      
      echo "DVWA host setup complete! Access at http://192.168.57.20"
    SHELL
  end
end

# =============================================================================
# VAGRANT CONFIGURATION NOTES
# =============================================================================
# 
# Network Layout:
# - 192.168.57.x/24: Primary lab network
#   - .100: Kali Control Machine
#   - .10:  Windows Metasploitable3
#   - .11:  Linux Metasploitable3
#   - .20:  DVWA Host (optional)
# 
# - 192.168.56.x/24: Secondary network for advanced scenarios
# 
# Usage Commands:
# - Start all VMs:           vagrant up
# - Start specific VM:       vagrant up kali-control
# - SSH to Kali:            vagrant ssh kali-control
# - Check VM status:        vagrant status
# - Stop all VMs:           vagrant halt
# - Destroy all VMs:        vagrant destroy
# 
# Lab Credentials:
# - Windows: vagrant/vagrant
# - Linux:   vagrant/vagrant  
# - Kali:    vagrant/vagrant
# 
# Port Forwards (from host):
# - 8080: Kali web service
# - 8443: Kali HTTPS service
# - 4444: Metasploit handler
# - 8081: DVWA (if dvwa-host is running)
# 
# ============================================================================= 